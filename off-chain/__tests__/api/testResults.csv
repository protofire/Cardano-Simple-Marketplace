URL,Method,Test Case,Category,URL used,Status,Error Message,Execution Time
/api/{entity},POST,"API Tests Create Entity POST API should return 200 when valid entity, body with createFields, and token are provided",Positive and Negative Scenarios,/api/marketnft,passed,"",22
/api/{entity},POST,"API Tests Create Entity POST API should return 500 when invalid createFields are provided",Data Validation,/api/marketnft,passed,"",18
/api/{entity},POST,"API Tests Create Entity POST API should return 400 when body has incorrect structure",Data Validation,/api/marketnft,passed,"",15
/api/{entity},POST,"API Tests Create Entity POST API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity,passed,"",11
/api/{entity},POST,"API Tests Create Entity POST API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft,passed,"",26
/api/{entity},POST,"API Tests Create Entity POST API should return 404 when entity is missing",Data Validation,/api/,passed,"",17
/api/{entity},POST,"API Tests Create Entity POST API should return 400 when createFields are missing",Data Validation,/api/marketnft,passed,"",23
/api/{entity},POST,"API Tests Create Entity POST API should return 401 when token is missing",Authentication and Authorization,/api/marketnft,passed,"",15
/api/{entity},POST,"API Tests Create Entity POST API should assess response time",Performance Testing,/api/marketnft,passed,"",23
/api/{entity},POST,"API Tests Create Entity POST API should assess response times under load",Performance Testing,/api/marketnft,passed,"",229
/api/{entity},POST,"API Tests Create Entity POST API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft,passed,"",20
/api/{entity},POST,"API Tests Create Entity POST API should handle XSS attempts gracefully",Security Testing,/api/marketnft,passed,"",20
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 200 when valid entity, ID, body with updateFields, and token are provided",Positive and Negative Scenarios,/api/marketnft/update/validEntityId,passed,"",19
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 500 when invalid updateFields are provided",Data Validation,/api/marketnft/update/validEntityId,passed,"",15
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 400 when body has incorrect structure",Data Validation,/api/marketnft/update/validEntityId,passed,"",15
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/update/validEntityId,passed,"",9
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 500 when invalid ID is provided",Data Validation,/api/marketnft/update/invalidEntityId,passed,"",16
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 404 when non-existent ID is provided",Error Handling,/api/marketnft/update/validNonExistsEntityId,passed,"",16
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/update/validEntityId,passed,"",12
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 404 when entity is missing",Data Validation,/api//update/validEntityId,passed,"",10
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 400 when ID is missing",Data Validation,/api/marketnft/update/,passed,"",16
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 400 when updateFields are missing",Data Validation,/api/marketnft/update/validEntityId,passed,"",13
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/update/validEntityId,passed,"",12
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should assess response time",Performance Testing,/api/marketnft/update/validEntityId,passed,"",22
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should assess response times under load",Performance Testing,/api/marketnft/update/validEntityId,passed,"",152
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/update/1 OR 1=1,passed,"",17
/api/{entity}/update/{id},POST,"API Tests Update Entity POST API should handle XSS attempts gracefully",Security Testing,/api/marketnft/update/validEntityId,passed,"",25
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 200 and swExists true when valid entity, ID, and token are provided",Positive and Negative Scenarios,/api/marketnft/exists/validEntityId,passed,"",17
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 400 when invalid ID is provided",Data Validation,/api/marketnft/exists/invalidEntityId,passed,"",13
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 200 when Non Exists ID is provided",Positive and Negative Scenarios,/api/marketnft/exists/validNonExistsEntityId,passed,"",16
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/exists/validEntityId,passed,"",10
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/exists/validEntityId,passed,"",14
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 404 when entity is missing",Data Validation,/api//exists/validEntityId,passed,"",10
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 400 when ID is missing",Data Validation,/api/marketnft/exists/,passed,"",17
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/exists/validEntityId,passed,"",11
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 401 when valid entity and ID are provided but token is invalid",Authentication and Authorization,/api/marketnft/exists/validEntityId,passed,"",12
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 404 when invalid entity and valid ID are provided",Error Handling,/api/invalidEntity/exists/validEntityId,passed,"",10
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should return 400 when valid entity and invalid ID are provided",Data Validation,/api/marketnft/exists/invalidEntityId,passed,"",12
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should assess response time",Performance Testing,/api/marketnft/exists/validEntityId,passed,"",14
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should assess response times under load",Performance Testing,/api/marketnft/exists/validEntityId,passed,"",144
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/exists/1 OR 1=1,passed,"",16
/api/{entity}/exists/{id},GET,"API Tests Exists Entity GET API should handle XSS attempts gracefully",Security Testing,/api/marketnft/exists/<script>alert("XSS")</script>,passed,"",14
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 200 and swExists true when valid entity, body with paramsFilter, and token are provided",Positive and Negative Scenarios,/api/marketnft/exists,passed,"",14
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 200 when Non Exists ID is provided in the body with paramsFilter",Positive and Negative Scenarios,/api/marketnft/exists,passed,"",17
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 200 when body without paramsFilter is provided",Positive and Negative Scenarios,/api/marketnft/exists,passed,"",16
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/exists,passed,"",9
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/exists,passed,"",15
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 404 when entity is missing",Data Validation,/api//exists,passed,"",14
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 200 when body is not provided",Positive and Negative Scenarios,/api/marketnft/exists,passed,"",16
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/exists,passed,"",10
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should assess response time",Performance Testing,/api/marketnft/exists,passed,"",16
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should assess response times under load",Performance Testing,/api/marketnft/exists,passed,"",118
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/exists,passed,"",24
/api/{entity}/exists,POST,"API Tests Exists Entity POST API should handle XSS attempts gracefully",Security Testing,/api/marketnft/exists,passed,"",16
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 200 and the entity when valid entity, ID, and token are provided",Positive and Negative Scenarios,/api/marketnft/validEntityId,passed,"",17
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 500 when invalid ID is provided",Data Validation,/api/marketnft/invalidEntityId,passed,"",16
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 404 when Non Exists ID is provided",Positive and Negative Scenarios,/api/marketnft/validNonExistsEntityId,passed,"",15
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/validEntityId,passed,"",9
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/validEntityId,passed,"",9
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 404 when entity is missing",Data Validation,/api//validEntityId,passed,"",10
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 405 when ID is missing",Data Validation,/api/marketnft/,passed,"",14
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/validEntityId,passed,"",14
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 401 when valid entity and ID are provided but token is invalid",Authentication and Authorization,/api/marketnft/validEntityId,passed,"",10
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 404 when invalid entity and valid ID are provided",Error Handling,/api/invalidEntity/validEntityId,passed,"",8
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should return 500 when valid entity and invalid ID are provided",Data Validation,/api/marketnft/invalidEntityId,passed,"",17
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should assess response time",Performance Testing,/api/marketnft/validEntityId,passed,"",17
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should assess response times under load",Performance Testing,/api/marketnft/validEntityId,passed,"",140
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/1 OR 1=1,passed,"",15
/api/{entity}/{id},GET,"API Tests Get Entity By Id GET API should handle XSS attempts gracefully",Security Testing,/api/marketnft/<script>alert("XSS")</script>,passed,"",18
/api/{entity}/all,GET,"API Tests Get All Entity GET API should return 200 and a list of entities when valid entity and token are provided",Positive and Negative Scenarios,/api/marketnft/all,passed,"",22
/api/{entity}/all,GET,"API Tests Get All Entity GET API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/all,passed,"",9
/api/{entity}/all,GET,"API Tests Get All Entity GET API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/all,passed,"",10
/api/{entity}/all,GET,"API Tests Get All Entity GET API should return 404 when entity is missing",Data Validation,/api//all,passed,"",12
/api/{entity}/all,GET,"API Tests Get All Entity GET API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/all,passed,"",23
/api/{entity}/all,GET,"API Tests Get All Entity GET API should assess response time",Performance Testing,/api/marketnft/all,passed,"",38
/api/{entity}/all,GET,"API Tests Get All Entity GET API should assess response times under load",Performance Testing,/api/marketnft/all,passed,"",212
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 200 and a list of entities when valid entity, body with paramsFilter, and token are provided",Positive and Negative Scenarios,/api/marketnft/by-params,passed,"",17
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/by-params,passed,"",8
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/by-params,passed,"",10
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 404 when entity is missing",Data Validation,/api//by-params,passed,"",11
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 200 when body has incorrect structure",Data Validation,/api/marketnft/by-params,passed,"",27
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 200 when paramsFilter is missing",Data Validation,/api/marketnft/by-params,passed,"",28
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/by-params,passed,"",11
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should assess response time",Performance Testing,/api/marketnft/by-params,passed,"",18
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should assess response times under load",Performance Testing,/api/marketnft/by-params,passed,"",160
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/by-params,passed,"",15
/api/{entity}/by-params,POST,"API Tests Get All Entity By Params POST API should handle XSS attempts gracefully",Security Testing,/api/marketnft/by-params,passed,"",15
/api/{entity}/count,POST,"API Tests Entity Count POST API should return 200 when body has incorrect structure",Data Validation,/api/marketnft/count,passed,"",14
/api/{entity}/count,POST,"API Tests Entity Count POST API should return 200 when paramsFilter is missing",Data Validation,/api/marketnft/count,passed,"",15
/api/{entity}/count,POST,"API Tests Entity Count POST API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/count,passed,"",14
/api/{entity}/count,POST,"API Tests Entity Count POST API should assess response time",Performance Testing,/api/marketnft/count,passed,"",16
/api/{entity}/count,POST,"API Tests Entity Count POST API should assess response times under load",Performance Testing,/api/marketnft/count,passed,"",112
/api/{entity}/count,POST,"API Tests Entity Count POST API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/count,passed,"",20
/api/{entity}/count,POST,"API Tests Entity Count POST API should handle XSS attempts gracefully",Security Testing,/api/marketnft/count,passed,"",14
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 200 and delete the entity when valid entity, ID, and token are provided",Positive and Negative Scenarios,/api/marketnft/validEntityId,passed,"",22
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 500 when invalid ID is provided",Data Validation,/api/marketnft/invalidEntityId,passed,"",17
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 404 when Non Exists ID is provided",Positive and Negative Scenarios,/api/marketnft/validNonExistsEntityId,passed,"",16
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 404 when invalid entity is provided",Error Handling,/api/invalidEntity/validEntityId,passed,"",9
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 401 when invalid token is provided",Authentication and Authorization,/api/marketnft/validEntityId,passed,"",11
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 404 when entity is missing",Data Validation,/api//validEntityId,passed,"",10
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 405 when ID is missing",Data Validation,/api/marketnft/,passed,"",14
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should return 401 when token is missing",Authentication and Authorization,/api/marketnft/validEntityId,passed,"",9
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should handle SQL injection attempts gracefully",Security Testing,/api/marketnft/1 OR 1=1,passed,"",19
/api/{entity}/{id},DELETE,"API Tests Delete Entity By Id DELETE API should handle XSS attempts gracefully",Security Testing,/api/marketnft/<script>alert("XSS")</script>,passed,"",18
/api/time/get,GET,"API Tests Others should return 200 and the current server time",Time,/api/time/get,passed,"",422
/api/health,GET,"API Tests Others should return 200 and status ok when the application is healthy",Health Check,/api/health,passed,"",11
/api/init,POST,"API Tests Others should return 200 and initialization complete",Initialization,/api/init,passed,"",10
/api/auth/csrf,GET,"API Tests Others should return 200 and the CSRF token",CSRF Token,/api/auth/csrf,passed,"",11
/api/smart-db-auth/get-challengue,GET,"API Tests Others get-challengue should return 200 and a challenge token",Smart DB Auth,/api/smart-db-auth/get-challengue,passed,"",15
/api/smart-db-auth/get-challengue,POST,"API Tests Others get-challengue should return 405 when method is not allowed",Smart DB Auth,/api/smart-db-auth/get-challengue,passed,"",9
/api/smart-db-auth/get-token,GET,"API Tests Others get-token should return 405 when method is not allowed",Smart DB Auth,/api/smart-db-auth/get-token,passed,"",9