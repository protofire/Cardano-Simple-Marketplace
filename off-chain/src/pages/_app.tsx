import { StoreProvider } from 'easy-peasy';
import { Session } from 'next-auth';
import { SessionProvider } from 'next-auth/react';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import { ReactNotifications } from 'react-notifications-component';
import 'react-notifications-component/dist/theme.css';
import { AppGeneral, globalStore, useWalletStore } from 'smart-db';
import Layout from '../components/UI/Layout/Layout';
import { metadata } from './_document';
// import 'smart-db/dist/styles.css';
import 'styles/global.scss';
import { Address, applyParamsToScript, Blockfrost, Data, Lucid, MintingPolicy, PolicyId, SpendingValidator, Unit, UTxO } from 'lucid-cardano';
import { createContext, Dispatch, SetStateAction, useEffect, useState } from 'react';
import WalletSelectorModal, { Wallet } from '@/components/Commons/WalletConnector/WalletSelectorModal';
import WalletConnector from '../components/Commons/WalletConnector/WalletConnector';

export const marketScript: SpendingValidator = {
    type: 'PlutusV2',
    script: '5907b55907b20100003232323232323232323232323232323232323232323232323232323232323232323232323222322232323232533553355333573460560020382a666ae68c0a800407409c54cd4ccd54c08c090c02c0308d40048894cd4cc04400d40184ccd5cd19b8748004004094088084c080d5400c0a40704cd5ce24811357726f6e6720616d6f756e74206275726e65640001e1533553353335530230243301f2233300c027002001300a0262325333573466e3cd400409cd402409c4ccd5cd19b87350010283500902802302001f3500102635500322222222222200c01c1335738921115554784f206e6f7420636f6e73756d65640001e15335333553023024300b00c235001222533533011003500613335734605e00204a04404260406aa006052038266ae712411357726f6e6720616d6f756e74206d696e7465640001e01d1120011635573a6ea80144d5400888cccd40040a080040a00a04d540040884c94ccd5cd18139aab9d00113232323212330010030023016357426ae8800d4ccd5cd18149aab9d00113232323232323232323232323232323232323232323232321233333333333300101801601401201000e00c0090070050030023031357426ae88008ccc0a5d710009aba10013574400466604e05240026ae84004d5d1001198133ae357420026ae8800d4ccd5cd181c9aab9d00113232323232123300100400253335734607a6aae740044c8c8c848cc00400c008c08cd5d09aba20023302375a6ae84004d55cf00081d1baa357426ae8800d4ccd5cd181d9aab9d001132323212330010030023021357426ae88008cc085d69aba100135573c0020706ea8d5d08009aab9e00103637546ae84004d5d10011998100123ad357420026ae88008cc07c084d5d08009aba200233301c75c0366ae84004d5d100119980d3ae019357420026ae88008cc064054d5d08009aba200233017012357420026ae88008cc054040d5d08009aab9e00102637546ae84004d55cf0008121baa00133018375c0046eb40048cc004894cd400805440040548cc05488ccd400c074008004d400407048cc004894cd4008400405005888ccd5cd19b8f00200101601323253335734603e0020202a666ae68c07800404406cd55ce9baa001223232533357346042002224440022a666ae68c0800044c84888c00c010c010d5d09aab9e002153335734603e002224440040386aae74004dd50009192999ab9a301c35573a00226464642466002006004600a6ae84d5d100118069aba100135573c0020326ea80048c94ccd5cd180d9aab9d0011323232323232323232321233330010090070030023300c75c6ae84d5d10022999ab9a302500113212223002004357426aae7800854ccd5cd1812000899091118008021bae357426aae7800854ccd5cd1811800889110018101aab9d00137546ae84004d5d1001199804bae008357420026ae8800d4ccd5cd180e9aab9d001132323212330010030023300700d357426ae88008c034d5d08009aab9e00101a37546ae84004d55cf00080c1baa001223232533357346038002264244600400660086ae84d55cf0010a999ab9a301d00100f01935573a0026ea8004cc005d73ad2223301d2233335573e002402646464646602e2466002006004600c6ae88014c01cd55cf00118039aab9d0013574200402a6eac00488cc06c88cccd55cf800900891980918029aba10023003357440040266eb00048c8c94ccd5cd180d00089909111180200298021aba135573c0042a666ae68c0640044c848888c008014c014d5d09aab9e002153335734603000226424444600200a600e6ae84d55cf0010a999ab9a3017001132122223003005375c6ae84d55cf00100a1aab9d00137540024646464a666ae68cdc3a40180042244444440062a666ae68cdc3a40140042244444440082a666ae68cdc3a40100042646424444444660020120106eb4d5d09aba25002375c6ae85400454ccd5cd180d0010991909111111198010048041bae357426ae894008dd71aba15001153335734603200426464244444446600c0120106eb8d5d09aba25002300535742a0022a666ae68c0600084c848888888c01c020c014d5d09aab9e003153335734602e00426424444444600a010600a6ae84d55cf00180a09aab9e00235573a0026ea80048c8c94ccd5cd180b000899191919190911998008030020019bad357426ae88008dd69aba1001357440046eb4d5d08009aab9e002153335734602a002264244600400660086ae84d55cf0010091aab9d001375400246464a666ae68c0540044c8488c00400cdd71aba135573c0042a666ae68c0500044c8488c00800cdd71aba135573c0040226aae74004dd50009192999ab9a301235573a0022646601060086ae84004dd69aba1357440026aae7800403cdd50009192999ab9a301135573a00226eb8d5d09aab9e00100e3754002200a200220104424660020060046601c444a66a00220044426a004446600e666602a4444a66a00220044426a00444a666ae68c0640044ccc02001c01800c4ccc02001ccc04448ccc00402000c00801800c00801800400c004401088488cc00401000cc02c88448894cd40044d400c020884ccd4014024c010008ccd54c01c02001401000448004880088800454cd5ce2481035054310016253357389201024c680016222222222222008370e90001b8748008dc3a40086e1d20062323001001223300330020020011',
};
export const mintingPolicyIDScript = '590f68590f65010000323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232232223232323232323253353355333573460900022642446004006a666ae68c118d55ce9baa357426aae7800807411054ccd5cd18238008990911800801a999ab9a304635573a6ea8d5d09aab9e00201d0440442320413500522330443303e002330443303e001337029000240040840844646464646464a66aa66a660746a01a446a0044444444444446464660c244a66a0022600606a4426a00444a666ae68cdc78010040980398258008980300180511999aa982402d1982911199a81282c8008011a811828911998133800010023355304705a235001223305b330550053305b33055002001059059533500121001153357389210866726f6d4a75737400163305833052488100330583305248810048000158158c0cc06c0280fc4cd5ce2481156e6f742069734d696e74696e674d61726b657449440002315335533500303f1335738921216e6f74206973436f72726563745f4f75747075745f4d61726b65745f446174756d0002315335533500203f1335738921216e6f74206973436f72726563745f4f75747075745f4d61726b65745f56616c75650002315335333355303804a0132202500104603f13357389211b6578706563746564207a65726f204d61726b657420696e707574730002304004004030441223330222232533553353026001133023001015044133005350030450021002353500204422220040013500d22222222222200c330383500420333330127006a012446609066084004660906608400290010230231a9a801900c1119824198210011982419821000a400408c08ca666ae68cdc79a80111110021a800911100209a80111111a8029111299a9a803111a802112999ab9a3371e0080042660520060020922666ae68cdc380280082581402281e999980c9a80091110021a80090189a800900b1a8009111000a99a9a80091112999a8010a99ab9c49129466f756e6420436f6c6c61746572616c206f757470757420627574204e6f4f7574707574446174756d001621301a0012153353500c2222222222223305d22533500104e22135002225333573466e3c00804c4c11c0044c01800c00884c06c0041008400454cd5ce2490f446174756d206e6f7420666f756e6400165335303f12233301d223253355335302100113301e00101003f13300500300210023500222220040013500822222222222200a130184988854cd40044008884c0712601d1635573a0026ea801cd400488cc100cc0e8008cc100cc0e8005200203e03e33037301a0024890e4d61726b6574506f6c6963794944003500103b5333573460806aae740044c8c8c8c848cc00400c008c090d5d09aba20035333573460846aae740044c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848cccccccccccc00406005805004804003803002401c01400c008c0fcd5d09aba200233303775c40026ae84004d5d100119981a81b90009aba10013574400466068eb8d5d08009aba20035333573460a46aae740044c8c8c8c8c848cc0040100094ccd5cd182b1aab9d001132323212330010030023031357426ae88008cc0c5d69aba100135573c0020a86ea8d5d09aba20035333573460a86aae740044c8c8c848cc00400c008c0bcd5d09aba20023302f75a6ae84004d55cf0008291baa357420026aae78004140dd51aba10013574400466605c064eb4d5d08009aba20023302d02f357420026ae88008ccc0a9d70149aba100135744004666050eb809cd5d08009aba200233027023357420026ae88008cc094080d5d08009aba20023302301e357420026aae78004100dd51aba100135573c00207c6ea8004cc0c4c094dd70008091981791118019801000900091119aa981301c91a800911981a00119aa981481e11a800911981b801199a80091980524000002012466014002900000099aa981301c91a800911981a001199a800919aa981501e91a800911981c00118068008009119980480a001000919aa981501e91a800911981c0011807000800999802007801000911199aa981b81c01b19aa981281c11a80091198198011804000999aa981b81c111a80111299a999aa981501e1981a1119980501d801000980401991a8009119805001002803080189981d00200181a00099aa981281c11a80091198198011982111299a800898058019109a80111299a9980600100408911198010050020980300180200111980091299a801016080080710911180180210911180080211100111999999aba400123253335734606c6aae740044c8cccd55cf80090071191999aab9f001201023233335573e00240244646666aae7c00480508cccd55cf9aba200225335300e3574201242a66a66601c01e01e6ae84020854cd4ccc03c040040d5d08039099299a9999999aba4001201a201a201a2302c375a0044034080426058666602800a00800600206c6ae840180d00cc0c880540ec0e8d5d100101c1aba2002036357440040686aae780040a4dd500110059005900590058189111999999aba400123253335734606e6aae740044c8cccd55cf80090079191999aab9f0012011233335573e6ae8800894cd4c028d5d080290a99a98051aba10042130263303300200103002f20120380373574400406a6aae780040a8dd5001100610061006100601911999999aba400120092009200920092301b375c00405e444424666600200a0080060044a66ae712411a65787065637465642065786163746c79206f6e6520696e7075740016223500222350032232335005233500425333573466e3c00800400c0a880348cd4010803494ccd5cd19b8f00200100302a153350032153350022133500223350022335002233500223300d00200120102335002201023300d00200122201022233500420102225333573466e1c01800c54ccd5cd19b870050021333573466e1c0100040d40480bc0bc0a054cd400480a009888ccd5cd19b8f00200102800522303222533500110032213300600230040012350012233500220052028101e1026235001223333500102a200102a02a2325333573460540020362a666ae68c0a400407009cd55ce9baa001223232533357346058002224440022a666ae68c0ac0044c84888c00c010c010d5d09aab9e0021533357346054002224440040506aae74004dd50009192999ab9a302735573a00226464642466002006004600a6ae84d5d100118069aba100135573c00204a6ea80048c94ccd5cd18131aab9d0011323232323232323232321233330010090070030023300c75c6ae84d5d10022999ab9a303000113212223002004357426aae7800854ccd5cd1817800899091118008021bae357426aae7800854ccd5cd1817000889110018161aab9d00137546ae84004d5d1001199804bae008357420026ae8800d4ccd5cd18141aab9d0011323301e300d357420026600c0186ae84d5d10009aab9e00102637546ae84004d55cf0008121baa00122323253335734604e0022601e60086ae84d55cf0010a999ab9a302800101a02535573a0026ea8004cc005d73ad222330282233335573e0024040464660466603a600e6aae74004c018d55cf00098021aba2003357420040466eac00488cc09888cccd55cf800900f11981018029aba10023003357440040426eb00048c8c94ccd5cd181280089909111180200298021aba135573c0042a666ae68c0900044c848888c008014c014d5d09aab9e002153335734604600226424444600200a600e6ae84d55cf0010a999ab9a3022001132122223003005375c6ae84d55cf0010101aab9d00137540024646464a666ae68cdc3a401800422444401a2a666ae68cdc3a40140042244444440082a666ae68cdc3a40100042646424444444660020120106eb4d5d09aba25002375c6ae85400454ccd5cd18128010991909111111198010048041bae357426ae894008dd71aba15001153335734604800426464244444446600c0120106eb8d5d09aba25002300535742a0022a666ae68c08c0084c848888888c01c020c014d5d09aab9e003153335734604400426424444444600a010600a6ae84d55cf00181009aab9e00235573a0026ea80048c8c94ccd5cd1810800899191919190911998008030020019bad357426ae88008dd69aba1001357440046eb4d5d08009aab9e0021533357346040002264244600400660086ae84d55cf00100f1aab9d001375400246464a666ae68c0800044c020dd71aba135573c0042a666ae68c07c0044c8488c00800cdd71aba135573c00403a6aae74004dd50009192999ab9a301d35573a002264646424660020060046eb4d5d09aba20023004357420026aae7800406cdd50009192999ab9a301c35573a00226eb8d5d09aab9e00101a375400244400642446004006424460020066034442244a66a0020184426602e600800466aa600c03200800260324422444a66a00226a00601c442666a00a02c6008004666aa600e03200a0080026a0040106a00201a601024446600644a66a0042a66a0020124426a00444a66a6601602800226601002800601c4426a00444a66a00a2a66a6601600202826601000602801c4426a00444a666ae68cdc78030010a99a99807802800899806003801809099998059980a003002803980b891198011980b00200180080191111a80211299a8018a99a9980580080a0998040028020071109a801112999ab9a3371e00c0042a66a6601e00a002266018012666aa6036038034006010024266660166602800c00a01266034660280040020100066a00400a6a002014600a24446600644a66a0042a66a00200c4426a00444a666ae68c0600044cc02004400c02c884d4008894cd401454ccd5cd180c0008998040018088059109a80111192999ab9a301d00613300d0083301833012003002004153335734603a00426601a660306602400e00c0100082a666ae68cdc78038018a999ab9a3370e00c00426601a010008002002266660166602200c00a00e6028244660046602600800600200644446a00844a66a0060164426a00444a666ae68c0700044cccc02ccc04401801402402000c54ccd5cd19b8f00600215333573466e1c0140044cc030024ccd54c06006405c00c0204cccc02ccc044018014024cc05ccc04400800402000c4cccc02ccc044018014024cc05ccc04400800402000c401c44004880048848cc00400c0088cc00800800488c8c848cc0048c00c88c00800c8c00c88c00400c8d4c00800cd400c004c0080088cd400401000840048800888488cc00401000cc02088448894cd40044008884cc014008ccd54c01c0200140100044800454cd5ce249035054310016253357389201024c680016370e90001b8748008dc3a40086e1d200623230010012233003300200200101'

// export const mintingPolicyID: MintingPolicy = {
//     type: 'PlutusV2',
//     script: mintingPolicyIDScript
// };
//
export type MenuClass = 'Buy' | 'Sell';

export type AppState = {
    // Global
    lucid?: Lucid;
    wAddr?: Address;
    marketAddress?: Address;
    menuClass?: string;
};

const initialAppState: AppState = {
    lucid: undefined,
    wAddr: undefined,
    marketAddress: 'undefined',
    menuClass: 'Buy',
};

export const AppStateContext = createContext<{
    appState: AppState;
    setAppState: Dispatch<SetStateAction<AppState>>;
}>({ appState: initialAppState, setAppState: () => {} });

export default function MyApp({ Component, pageProps }: AppProps<{ session?: Session }>) {
    const [appState, setAppState] = useState<AppState>(initialAppState);
    const [showWalletModal, setShowWalletModal] = useState(false);

    useEffect(() => {
        if (appState.lucid) return;
        setShowWalletModal(true);
    }, [appState]);

    return (
        <AppStateContext.Provider value={{ appState, setAppState }}>
            <SessionProvider session={pageProps.session} refetchInterval={0}>
                <StoreProvider store={globalStore}>
                    <AppGeneral />
                    <ReactNotifications />
                    <Layout>
                        <Component {...pageProps} />
                    </Layout>
                </StoreProvider>
            </SessionProvider>
        </AppStateContext.Provider>
    );
}

// export default function MyApp({ Component, pageProps }: AppProps<{ session?: Session }>) {
//     return (
//         <>
//             <SessionProvider session={pageProps.session} refetchInterval={0}>
//                 <StoreProvider store={globalStore}>
//                     <AppGeneral />
//                     <ReactNotifications />
//                     <Layout>
//                         <Component {...pageProps} />
//                     </Layout>
//                 </StoreProvider>
//             </SessionProvider>
//         </>
//     );
// }
